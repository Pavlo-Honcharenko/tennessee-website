class Parallax{constructor(t){t.length&&(this.elements=Array.from(t).map(i=>new Parallax.Each(i,this.options)))}destroyEvents(){this.elements.forEach(t=>{t.destroyEvents()})}setEvents(){this.elements.forEach(t=>{t.setEvents()})}}Parallax.Each=class{constructor(a){this.parent=a,this.elements=this.parent.querySelectorAll("[data-fls-parallax]"),this.animation=this.animationFrame.bind(this),this.offset=0,this.value=0,this.smooth=a.dataset.flsParallaxSmooth?Number(a.dataset.flsParallaxSmooth):1,this.setEvents()}setEvents(){this.animationID=window.requestAnimationFrame(this.animation)}destroyEvents(){window.cancelAnimationFrame(this.animationID)}animationFrame(){const a=this.parent.getBoundingClientRect().top,t=this.parent.offsetHeight,i=window.innerHeight,s={top:a-i,bottom:a+t},o=this.parent.dataset.flsParallaxCenter?this.parent.dataset.flsParallaxCenter:"center";if(s.top<3&&s.bottom>-3)switch(o){case"top":this.offset=-1*a;break;case"center":this.offset=i/15-(a+t/15);break;case"bottom":this.offset=i-(a+t);break}this.value+=(this.offset-this.value)/this.smooth,this.animationID=window.requestAnimationFrame(this.animation),this.elements.forEach(e=>{const n={axis:e.dataset.axis?e.dataset.axis:"v",direction:e.dataset.flsParallaxDirection?e.dataset.flsParallaxDirection+"1":"1",coefficient:e.dataset.flsParallaxCoefficient?Number(e.dataset.flsParallaxCoefficient):1,additionalProperties:e.dataset.flsParallaxProperties?e.dataset.flsParallaxProperties:""};this.parameters(e,n)})}parameters(a,t){t.axis=="v"?a.style.transform=`translate3D(0, ${(t.direction*(this.value/t.coefficient)).toFixed(2)}px,0) ${t.additionalProperties}`:t.axis=="h"&&(a.style.transform=`translate3D(${(t.direction*(this.value/t.coefficient)).toFixed(2)}px,0,0) ${t.additionalProperties}`)}},document.querySelector("[data-fls-parallax-parent]")&&new Parallax(document.querySelectorAll("[data-fls-parallax-parent]"));
